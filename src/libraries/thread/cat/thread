// -*- mode: c++ -*-
// vim: set ft=cpp:
#pragma once

#include <cat/allocator>
#include <cat/linux>

namespace cat {

struct Thread {
  public:
    Thread() = default;
    Thread(Thread const&) = delete;
    // TODO: Default or delete a move constructor and assignment operator?

    // TODO: Use an `invocable` `concept`.
    auto create(allocator auto& allocator, ssize initial_stack_size,
                auto const& function, void* p_arguments_struct)
        -> Optional<void> {
        Scaredy result = this->process.create(allocator, initial_stack_size,
                                              function, p_arguments_struct);
        if (result.has_value()) {
            return monostate;
        }
        return nullopt;
    }

    auto join() const -> Optional<void> {
        Scaredy result = this->process.wait();
        if (result.has_value()) {
            return monostate;
        }
        return nullopt;
    }

  private:
    // This is platform-specific hidden code.
    [[maybe_unused]] nix::Process process;
};

void relax_cpu() {
    asm volatile("pause" ::: "memory");
}

}  // namespace cat
